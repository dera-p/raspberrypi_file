#              .';:cc;.
#            .,',;lol::c.
#            ;';lddddlclo
#            lcloxxoddodxdool:,.
#            cxdddxdodxdkOkkkkkkkd:.
#          .ldxkkOOOOkkOO000Okkxkkkkx:.
#        .lddxkkOkOOO0OOO0000Okxxxxkkkk:
#       'ooddkkkxxkO0000KK00Okxdoodxkkkko
#      .ooodxkkxxxOO000kkkO0KOxolooxkkxxkl
#      lolodxkkxxkOx,.      .lkdolodkkxxxO.
#      doloodxkkkOk           ....   .,cxO;
#      ddoodddxkkkk:         ,oxxxkOdc'..o'
#      :kdddxxxxd,  ,lolccldxxxkkOOOkkkko,
#       lOkxkkk;  :xkkkkkkkkOOO000OOkkOOk.
#        ;00Ok' 'O000OO0000000000OOOO0Od.
#         .l0l.;OOO000000OOOOOO000000x,
#            .'OKKKK00000000000000kc.
#               .:ox0KKKKKKK0kdc,.
#                      ...
#
# Author: peppe8o
# Blog: https://peppe8o.com
# Date: May 2nd, 2021
# Version: 1.0

import RPi.GPIO as GPIO
import time
import sys

#define PINs according to cabling
DATA_PIN = 17
LATCH_PIN = 18
CLOCK_PIN = 27

LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'

#map your output into 1 (LED off) and 0 (led on) sequences       
char_map = {
    'A': [
        '00111100',
        '01000010',
        '01000010',
        '01000010',
        '01111110',
        '01000010',
        '01000010',
        '01000010'
    ],
    'B': [
        '01111100',
        '01000010',
        '01000010',
        '01111100',
        '01000010',
        '01000010',
        '01000010',
        '01111100'
    ],
    'C': [
        '00111100',
        '01000010',
        '01000000',
        '01000000',
        '01000000',
        '01000000',
        '01000010',
        '00111100'
    ],
    'D': [
        '01111000',
        '01000100',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '01000100',
        '01111000'
    ],
    'E': [
        '01111110',
        '01000000',
        '01000000',
        '01111100',
        '01000000',
        '01000000',
        '01000000',
        '01111110'
    ],
    'F': [
        '01111110',
        '01000000',
        '01000000',
        '01111100',
        '01000000',
        '01000000',
        '01000000',
        '01000000'
    ],
    'G': [
        '00111100',
        '01000010',
        '01000000',
        '01001110',
        '01000010',
        '01000010',
        '01000010',
        '00111100'
    ],
    'H': [
        '01000010',
        '01000010',
        '01000010',
        '01111110',
        '01000010',
        '01000010',
        '01000010',
        '01000010'
    ],
    'I': [
        '01111110',
        '00010000',
        '00010000',
        '00010000',
        '00010000',
        '00010000',
        '00010000',
        '01111110'
    ],
    'J': [
        '00011110',
        '00000100',
        '00000100',
        '00000100',
        '00000100',
        '01000100',
        '01000100',
        '00111000'
    ],
    'K': [
        '01000010',
        '01000100',
        '01001000',
        '01110000',
        '01001000',
        '01000100',
        '01000010',
        '01000010'
    ],
    'L': [
        '01000000',
        '01000000',
        '01000000',
        '01000000',
        '01000000',
        '01000000',
        '01000000',
        '01111110'
    ],
    'M': [
        '01000010',
        '01100110',
        '01011010',
        '01011010',
        '01000010',
        '01000010',
        '01000010',
        '01000010'
    ],
    'N': [
        '01000010',
        '01100010',
        '01010010',
        '01001010',
        '01000110',
        '01000010',
        '01000010',
        '01000010'
    ],
    'O': [
        '00111100',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '00111100'
    ],
    'P': [
        '01111100',
        '01000010',
        '01000010',
        '01111100',
        '01000000',
        '01000000',
        '01000000',
        '01000000'
    ],
    'Q': [
        '00111100',
        '01000010',
        '01000010',
        '01000010',
        '01010010',
        '01001010',
        '00111100',
        '00000010'
    ],
    'R': [
        '01111100',
        '01000010',
        '01000010',
        '01111100',
        '01001000',
        '01000100',
        '01000010',
        '01000010'
    ],
    'S': [
        '00111110',
        '01000000',
        '01000000',
        '00111100',
        '00000010',
        '00000010',
        '00000010',
        '01111100'
    ],
    'T': [
        '01111110',
        '00010000',
        '00010000',
        '00010000',
        '00010000',
        '00010000',
        '00010000',
        '00010000'
    ],
    'U': [
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '00111100'
    ],
    'V': [
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '01000010',
        '00100100',
        '00011000'
    ],
    'W': [
        '01000010',
        '01000010',
        '01000010',
        '01011010',
        '01011010',
        '01100110',
        '01000010',
        '01000010'
    ],
    'X': [
        '01000010',
        '01000010',
        '00100100',
        '00011000',
        '00100100',
        '01000010',
        '01000010',
        '01000010'
    ],
    'Y': [
        '01000010',
        '01000010',
        '00100100',
        '00011000',
        '00010000',
        '00010000',
        '00010000',
        '00010000'
    ],
    'Z': [
        '01111110',
        '00000010',
        '00000100',
        '00001000',
        '00010000',
        '00100000',
        '01000000',
        '01111110'
    ],
    '0': [
        '00111100',
        '01000010',
        '01000110',
        '01001010',
        '01010010',
        '01100010',
        '01000010',
        '00111100'
    ],
    '1': [
        '00011000',
        '00101000',
        '01001000',
        '00001000',
        '00001000',
        '00001000',
        '00001000',
        '01111110'
    ],
    '2': [
        '00111100',
        '01000010',
        '00000010',
        '00000100',
        '00001000',
        '00010000',
        '00100000',
        '01111110'
    ],
    '3': [
        '00111100',
        '01000010',
        '00000010',
        '00001100',
        '00000010',
        '00000010',
        '01000010',
        '00111100'
    ],
    '4': [
        '00000100',
        '00001100',
        '00010100',
        '00100100',
        '01000100',
        '01111110',
        '00000100',
        '00000100'
    ],
    '5': [
        '01111110',
        '01000000',
        '01111100',
        '00000010',
        '00000010',
        '00000010',
        '01000010',
        '00111100'
    ],
    '6': [
        '00111100',
        '01000000',
        '01000000',
        '01111100',
        '01000010',
        '01000010',
        '01000010',
        '00111100'
    ],
    '7': [
        '01111110',
        '00000010',
        '00000100',
        '00001000',        
        '00010000',
        '00100000',
        '00100000',
        '00100000'
    ],
    '8': [
        '00111100',
        '01000010',
        '01000010',
        '00111100',
        '01000010',
        '01000010',
        '01000010',
        '00111100'
    ],
    '9': [
        '00111100',
        '01000010',
        '01000010',
        '00111110',
        '00000010',
        '00000010',
        '00000010',
        '01111110'
    ],
    'smile': [
        '11111111',
        '11000011',
        '10111101',
        '01011010',
        '01111110',
        '01100110',
        '10111101',
        '11000011'
    ],
    'heart': [
        '00000000',
        '01000010',
        '11100111',
        '11111111',
        '11111111',
        '01111110',
        '00111100',
        '00011000'
    ]    

}


#set pins to putput
GPIO.setmode(GPIO.BCM)
GPIO.setup((DATA_PIN,LATCH_PIN,CLOCK_PIN),GPIO.OUT)
GPIO.setup((DATA_PIN,LATCH_PIN,CLOCK_PIN),GPIO.LOW)

def shift_out(bit_val):
  GPIO.output(LATCH_PIN, GPIO.LOW)
  for bit in bit_val:
    GPIO.output(CLOCK_PIN, GPIO.LOW)
    GPIO.output(DATA_PIN, int(bit))
    GPIO.output(CLOCK_PIN, GPIO.HIGH)
  GPIO.output(LATCH_PIN, GPIO.HIGH)

def display_letter(letter):
  for _ in range(100):
    for row in range(8):
      row_select = '{0:08b}'.format(0xFF ^ (1 << row))
      shift_out(letter[row])
      shift_out(row_select)
      time.sleep(0.001)


#main program, calling shift register function to activate 8x8 LED Matrix
while True:
  try:
    for letter in list(LETTERS):
      print(letter)
      display_letter(char_map.get(letter))
      time.sleep(1)

#PINs final cleaning on interrupt
  except KeyboardInterrupt:
    GPIO.cleanup()
    sys.exit()
    
